<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:PIM="http://localhost/mdd/PIM.ecore" xsi:schemaLocation="http://localhost/mdd/PIM.ecore ../source/PIM.ecore">
  <PIM:RootPIM>
    <architecture ArchitectureName="TrainTicket">
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="redis">
        <container ContainerName="redis">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:redis,ImageField:redis, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Cache" Technology="Redis">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:redis,ImageField:redis, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://redis:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:redis,ImageField:redis, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:redis,ImageField:redis, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices MicroserviceName="ts-ui-dashboard">
        <container ContainerName="ts-ui-dashboard">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ui-dashboard,ImageField:openresty/openresty:trusty, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-ui-dashboard]</GeneratingPSM>
        </container>
        <interface ServerURL="[http|https]://ts-ui-dashboard:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ui-dashboard,ImageField:openresty/openresty:trusty, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-ui-dashboard]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ui-dashboard,ImageField:openresty/openresty:trusty, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-ui-dashboard]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-auth-mongo">
        <container ContainerName="ts-auth-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-auth-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-auth-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-auth-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-auth-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-auth-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-user-mongo">
        <container ContainerName="ts-user-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-user-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-user-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-user-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-user-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-user-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-account-mongo">
        <container ContainerName="ts-account-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-account-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-account-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-account-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-account-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-account-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-route-mongo">
        <container ContainerName="ts-route-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-route-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-contacts-mongo">
        <container ContainerName="ts-contacts-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-contacts-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-contacts-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-contacts-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-contacts-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-contacts-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-order-mongo">
        <container ContainerName="ts-order-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-order-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-order-other-mongo">
        <container ContainerName="ts-order-other-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-other-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-other-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-order-other-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-other-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-other-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-config-mongo">
        <container ContainerName="ts-config-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-config-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-config-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-config-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-config-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-config-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-station-mongo">
        <container ContainerName="ts-station-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-station-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-station-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-station-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-station-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-station-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-train-mongo">
        <container ContainerName="ts-train-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-train-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-train-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-train-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-train-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-train-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-travel-mongo">
        <container ContainerName="ts-travel-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-travel-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-travel2-mongo">
        <container ContainerName="ts-travel2-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel2-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel2-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-travel2-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel2-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel2-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-price-mongo">
        <container ContainerName="ts-price-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-price-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-price-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-price-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-price-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-price-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-security-mongo">
        <container ContainerName="ts-security-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-security-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-security-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-security-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-security-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-security-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-inside-payment-mongo">
        <container ContainerName="ts-inside-payment-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-inside-payment-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-inside-payment-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-inside-payment-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-inside-payment-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-inside-payment-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-payment-mongo">
        <container ContainerName="ts-payment-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-payment-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-payment-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-payment-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-payment-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-payment-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-rebook-mongo">
        <container ContainerName="ts-rebook-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-rebook-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-rebook-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-rebook-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-rebook-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-rebook-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-assurance-mongo">
        <container ContainerName="ts-assurance-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-assurance-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-assurance-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-assurance-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-assurance-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-assurance-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices MicroserviceName="ts-ticket-office-service">
        <container ContainerName="ts-ticket-office-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ticket-office-service,ImageField:node, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-ticket-office-service]</GeneratingPSM>
        </container>
        <interface ServerURL="[http|https]://ts-ticket-office-service:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ticket-office-service,ImageField:node, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-ticket-office-service]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ticket-office-service,ImageField:node, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-ticket-office-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-ticket-office-mongo">
        <container ContainerName="ts-ticket-office-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ticket-office-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ticket-office-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-ticket-office-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ticket-office-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ticket-office-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices MicroserviceName="ts-news-service">
        <container ContainerName="ts-news-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-news-service,ImageField:mrrm/web.go, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-news-service]</GeneratingPSM>
        </container>
        <interface ServerURL="[http|https]://ts-news-service:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-news-service,ImageField:mrrm/web.go, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-news-service]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-news-service,ImageField:mrrm/web.go, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-news-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-news-mongo">
        <container ContainerName="ts-news-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-news-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-news-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-news-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-news-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-news-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-voucher-mysql">
        <container ContainerName="ts-voucher-mysql">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-voucher-mysql,ImageField:mysql, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MySQL">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-voucher-mysql,ImageField:mysql, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-voucher-mysql:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-voucher-mysql,ImageField:mysql, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-voucher-mysql,ImageField:mysql, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices MicroserviceName="ts-voucher-service">
        <container ContainerName="ts-voucher-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-voucher-service,ImageField:python:3, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-voucher-service]</GeneratingPSM>
        </container>
        <interface ServerURL="[http|https]://ts-voucher-service:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-voucher-service,ImageField:python:3, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-voucher-service]</GeneratingPSM>
        </interface>
        <dependencies ProviderName="ts-voucher-mysql">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-voucher-service,ImageField:python:3, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>DockerContainerLink[LinksDependsOnField:ts-voucher-mysql]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-voucher-service,ImageField:python:3, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-voucher-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-food-map-mongo">
        <container ContainerName="ts-food-map-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-map-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-map-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-food-map-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-map-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-map-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-consign-mongo">
        <container ContainerName="ts-consign-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-consign-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-consign-price-mongo">
        <container ContainerName="ts-consign-price-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-price-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-price-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-consign-price-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-price-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-price-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-food-mongo">
        <container ContainerName="ts-food-mongo">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-food-mongo:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-mongo,ImageField:mongo, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices MicroserviceName="jaeger">
        <container ContainerName="jaeger">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:jaeger,ImageField:jaegertracing/all-in-one:1.15, GeneratesLogs:false]</GeneratingPSM>
        </container>
        <interface ServerURL="[http|https]://jaeger:&lt;port-number>">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:jaeger,ImageField:jaegertracing/all-in-one:1.15, GeneratesLogs:false]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:jaeger,ImageField:jaegertracing/all-in-one:1.15, GeneratesLogs:false]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:InfrastructureMicroservice" MicroserviceName="ts-auth-service">
        <container ContainerName="ts-auth-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-auth-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-auth-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components xsi:type="PIM:InfrastructureClientComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.database]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.port]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <components Category="Observability_Pattern_Application_Metrics_Logging" Technology="Slf4j" Environment="COMPILE">
          <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
        </components>
        <components xsi:type="PIM:InfrastructureServerComponent" Category="Security_Pattern_Authorization_and_Authentication" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:authenticate()]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-auth-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/users">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllUser()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getAllUser()]</GeneratingPSM>
            <operation OperationName="getAllUser()" OperationDescription="An operation with name getAllUser() that responds with object ResponseEntity&lt;List&lt;User>>">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllUser()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/auth">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createDefaultUser()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createDefaultUser()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:createDefaultUser()]</GeneratingPSM>
            <operation OperationName="createDefaultUser()" OperationDescription="An operation with name createDefaultUser() that requests object AuthDto and responds with object HttpEntity&lt;Response>">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createDefaultUser()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/auth/hello">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getHello()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getHello()]</GeneratingPSM>
            <operation OperationName="getHello()" OperationDescription="An operation with name getHello() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getHello()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/users/login">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getToken()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getToken()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getToken()]</GeneratingPSM>
            <operation OperationName="getToken()" OperationDescription="An operation with name getToken() that requests object BasicAuthDto and responds with object ResponseEntity&lt;Response>">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getToken()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/users/{userId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteUserById()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:deleteUserById()]</GeneratingPSM>
            <operation OperationName="deleteUserById()" OperationDescription="An operation with name deleteUserById() that responds with object ResponseEntity&lt;Response>">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteUserById()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/users/hello">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getHello()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getHello()]</GeneratingPSM>
            <operation OperationName="getHello()" OperationDescription="An operation with name getHello() that responds with object Object">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getHello()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-auth-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-auth-service]</GeneratingPSM>
        </interface>
        <dependencies ProviderName="ts-auth-mongo" ProviderDestination="" Environment="COMPILE">
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getToken()" ProviderName="ts-verification-code-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/verifycode/verify/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-auth-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-auth-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-user-service">
        <container ContainerName="ts-user-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-user-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-user-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components xsi:type="PIM:InfrastructureClientComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.database]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.port]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <components Category="Observability_Pattern_Application_Metrics_Logging" Technology="Slf4j" Environment="COMPILE">
          <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-user-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT /api/v1/userservice/users">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateUser()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateUser()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:updateUser()]</GeneratingPSM>
            <operation OperationName="updateUser()" OperationDescription="An operation with name updateUser() that requests object UserDto and responds with object ResponseEntity&lt;Response>">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateUser()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/userservice/users">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllUser()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getAllUser()]</GeneratingPSM>
            <operation OperationName="getAllUser()" OperationDescription="An operation with name getAllUser() that responds with object ResponseEntity&lt;Response>">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllUser()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/userservice/users/{userId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteUserById()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:deleteUserById()]</GeneratingPSM>
            <operation OperationName="deleteUserById()" OperationDescription="An operation with name deleteUserById() that responds with object ResponseEntity&lt;Response>">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteUserById()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/userservice/users/register">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:registerUser()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:registerUser()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:registerUser()]</GeneratingPSM>
            <operation OperationName="registerUser()" OperationDescription="An operation with name registerUser() that requests object UserDto and responds with object ResponseEntity&lt;Response>">
              <GeneratingPSM>JavaMethod[ElementIdentifier:registerUser()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/userservice/users/{userName}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getUserByUserName()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getUserByUserName()]</GeneratingPSM>
            <operation OperationName="getUserByUserName()" OperationDescription="An operation with name getUserByUserName() that responds with object ResponseEntity&lt;Response>">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getUserByUserName()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/userservice/users/hello">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:testHello()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:testHello()]</GeneratingPSM>
            <operation OperationName="testHello()" OperationDescription="An operation with name testHello() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:testHello()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/userservice/users/id/{userId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getUserByUserId()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getUserByUserId()]</GeneratingPSM>
            <operation OperationName="getUserByUserId()" OperationDescription="An operation with name getUserByUserId() that responds with object ResponseEntity&lt;Response>">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getUserByUserId()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-user-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-user-service]</GeneratingPSM>
        </interface>
        <dependencies ProviderName="ts-user-mongo" ProviderDestination="" Environment="COMPILE">
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="createDefaultAuthUser()" ProviderName="ts-auth-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/auth&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="deleteUserAuth()" ProviderName="" ProviderDestination="Endpoint[RequestURI:DELETE ]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-user-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-user-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-verification-code-service">
        <container ContainerName="ts-verification-code-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-verification-code-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-verification-code-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <components Category="Observability_Pattern_Application_Metrics_Logging" Technology="Slf4j" Environment="COMPILE">
          <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-verification-code-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/verifycode/verify/{verifyCode}">
            <GeneratingPSM>JavaMethod[ElementIdentifier:verifyCode()]</GeneratingPSM>
            <operation OperationName="verifyCode()" OperationDescription="An operation with name verifyCode()">
              <GeneratingPSM>JavaMethod[ElementIdentifier:verifyCode()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/verifycode/generate">
            <GeneratingPSM>JavaMethod[ElementIdentifier:imageCode()]</GeneratingPSM>
            <operation OperationName="imageCode()" OperationDescription="An operation with name imageCode()">
              <GeneratingPSM>JavaMethod[ElementIdentifier:imageCode()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-verification-code-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-verification-code-service]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-verification-code-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-verification-code-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-route-service">
        <container ContainerName="ts-route-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-route-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components xsi:type="PIM:InfrastructureClientComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.database]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.port]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-route-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/routeservice/routes/{routeId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryById()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryById()]</GeneratingPSM>
            <operation OperationName="queryById()" OperationDescription="An operation with name queryById() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryById()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/routeservice/routes">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryAll()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryAll()]</GeneratingPSM>
            <operation OperationName="queryAll()" OperationDescription="An operation with name queryAll() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryAll()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/routeservice/routes/{startId}/{terminalId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryByStartAndTerminal()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryByStartAndTerminal()]</GeneratingPSM>
            <operation OperationName="queryByStartAndTerminal()" OperationDescription="An operation with name queryByStartAndTerminal() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryByStartAndTerminal()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/routeservice/routes">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createAndModifyRoute()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createAndModifyRoute()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:createAndModifyRoute()]</GeneratingPSM>
            <operation OperationName="createAndModifyRoute()" OperationDescription="An operation with name createAndModifyRoute() that requests object RouteInfo and responds with object ResponseEntity&lt;Response>">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createAndModifyRoute()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/routeservice/routes/{routeId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteRoute()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:deleteRoute()]</GeneratingPSM>
            <operation OperationName="deleteRoute()" OperationDescription="An operation with name deleteRoute() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteRoute()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/routeservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-route-service]</GeneratingPSM>
        </interface>
        <dependencies ProviderName="ts-route-mongo" ProviderDestination="" Environment="COMPILE">
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-route-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-contacts-service">
        <container ContainerName="ts-contacts-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-contacts-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-contacts-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components xsi:type="PIM:InfrastructureClientComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.database]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.port]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <components Category="Observability_Pattern_Application_Metrics_Logging" Technology="Slf4j" Environment="COMPILE">
          <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-contacts-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT api/v1/contactservice/contacts">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyContacts()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyContacts()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:modifyContacts()]</GeneratingPSM>
            <operation OperationName="modifyContacts()" OperationDescription="An operation with name modifyContacts() that requests object Contacts and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyContacts()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET api/v1/contactservice/contacts/{id}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getContactsByContactsId()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getContactsByContactsId()]</GeneratingPSM>
            <operation OperationName="getContactsByContactsId()" OperationDescription="An operation with name getContactsByContactsId() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getContactsByContactsId()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST api/v1/contactservice/contacts/admin">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createNewContactsAdmin()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createNewContactsAdmin()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:createNewContactsAdmin()]</GeneratingPSM>
            <operation OperationName="createNewContactsAdmin()" OperationDescription="An operation with name createNewContactsAdmin() that requests object Contacts and responds with object HttpEntity&lt;>">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createNewContactsAdmin()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET api/v1/contactservice/contacts">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllContacts()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getAllContacts()]</GeneratingPSM>
            <operation OperationName="getAllContacts()" OperationDescription="An operation with name getAllContacts() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllContacts()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST api/v1/contactservice/contacts">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createNewContacts()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createNewContacts()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:createNewContacts()]</GeneratingPSM>
            <operation OperationName="createNewContacts()" OperationDescription="An operation with name createNewContacts() that requests object Contacts and responds with object ResponseEntity&lt;Response>">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createNewContacts()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET api/v1/contactservice/contacts/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET api/v1/contactservice/contacts/account/{accountId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:findContactsByAccountId()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:findContactsByAccountId()]</GeneratingPSM>
            <operation OperationName="findContactsByAccountId()" OperationDescription="An operation with name findContactsByAccountId() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:findContactsByAccountId()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE api/v1/contactservice/contacts/{contactsId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteContacts()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:deleteContacts()]</GeneratingPSM>
            <operation OperationName="deleteContacts()" OperationDescription="An operation with name deleteContacts() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteContacts()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-contacts-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-contacts-service]</GeneratingPSM>
        </interface>
        <dependencies ProviderName="ts-contacts-mongo" ProviderDestination="" Environment="COMPILE">
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-contacts-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-contacts-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-order-service">
        <container ContainerName="ts-order-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-order-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components xsi:type="PIM:InfrastructureClientComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.database]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.port]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <components Category="Observability_Pattern_Application_Metrics_Logging" Technology="Slf4j" Environment="COMPILE">
          <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-order-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/orderservice/order">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:findAllOrder()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:findAllOrder()]</GeneratingPSM>
            <operation OperationName="findAllOrder()" OperationDescription="An operation with name findAllOrder() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:findAllOrder()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/orderservice/order">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createNewOrder()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createNewOrder()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:createNewOrder()]</GeneratingPSM>
            <operation OperationName="createNewOrder()" OperationDescription="An operation with name createNewOrder() that requests object Order and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createNewOrder()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/orderservice/order/security/{checkDate}/{accountId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:securityInfoCheck()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:securityInfoCheck()]</GeneratingPSM>
            <operation OperationName="securityInfoCheck()" OperationDescription="An operation with name securityInfoCheck() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:securityInfoCheck()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/orderservice/order/tickets">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTicketListByDateAndTripId()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTicketListByDateAndTripId()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getTicketListByDateAndTripId()]</GeneratingPSM>
            <operation OperationName="getTicketListByDateAndTripId()" OperationDescription="An operation with name getTicketListByDateAndTripId() that requests object Seat and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTicketListByDateAndTripId()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/orderservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/orderservice/order/{travelDate}/{trainNumber}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:calculateSoldTicket()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:calculateSoldTicket()]</GeneratingPSM>
            <operation OperationName="calculateSoldTicket()" OperationDescription="An operation with name calculateSoldTicket() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:calculateSoldTicket()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/orderservice/order/query">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryOrders()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryOrders()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryOrders()]</GeneratingPSM>
            <operation OperationName="queryOrders()" OperationDescription="An operation with name queryOrders() that requests object OrderInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryOrders()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/orderservice/order/orderPay/{orderId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:payOrder()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:payOrder()]</GeneratingPSM>
            <operation OperationName="payOrder()" OperationDescription="An operation with name payOrder() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:payOrder()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/orderservice/order/admin">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addcreateNewOrder()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addcreateNewOrder()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:addcreateNewOrder()]</GeneratingPSM>
            <operation OperationName="addcreateNewOrder()" OperationDescription="An operation with name addcreateNewOrder() that requests object Order and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addcreateNewOrder()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/orderservice/order/refresh">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryOrdersForRefresh()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryOrdersForRefresh()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryOrdersForRefresh()]</GeneratingPSM>
            <operation OperationName="queryOrdersForRefresh()" OperationDescription="An operation with name queryOrdersForRefresh() that requests object OrderInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryOrdersForRefresh()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/orderservice/order/price/{orderId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getOrderPrice()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getOrderPrice()]</GeneratingPSM>
            <operation OperationName="getOrderPrice()" OperationDescription="An operation with name getOrderPrice() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getOrderPrice()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT /api/v1/orderservice/order">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:saveOrderInfo()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:saveOrderInfo()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:saveOrderInfo()]</GeneratingPSM>
            <operation OperationName="saveOrderInfo()" OperationDescription="An operation with name saveOrderInfo() that requests object Order and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:saveOrderInfo()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/orderservice/order/{orderId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getOrderById()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getOrderById()]</GeneratingPSM>
            <operation OperationName="getOrderById()" OperationDescription="An operation with name getOrderById() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getOrderById()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/orderservice/order/status/{orderId}/{status}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyOrder()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:modifyOrder()]</GeneratingPSM>
            <operation OperationName="modifyOrder()" OperationDescription="An operation with name modifyOrder() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyOrder()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT /api/v1/orderservice/order/admin">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateOrder()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateOrder()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:updateOrder()]</GeneratingPSM>
            <operation OperationName="updateOrder()" OperationDescription="An operation with name updateOrder() that requests object Order and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateOrder()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/orderservice/order/{orderId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteOrder()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:deleteOrder()]</GeneratingPSM>
            <operation OperationName="deleteOrder()" OperationDescription="An operation with name deleteOrder() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteOrder()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-order-service]</GeneratingPSM>
        </interface>
        <dependencies ProviderName="ts-order-mongo" ProviderDestination="" Environment="COMPILE">
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="queryForStationId()" ProviderName="ts-station-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/stationservice/stations/namelist&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-order-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-order-other-service">
        <container ContainerName="ts-order-other-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-other-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-order-other-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components xsi:type="PIM:InfrastructureClientComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.database]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.port]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <components Category="Observability_Pattern_Application_Metrics_Logging" Technology="Slf4j" Environment="COMPILE">
          <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-order-other-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/orderOtherService/orderOther/price/{orderId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getOrderPrice()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getOrderPrice()]</GeneratingPSM>
            <operation OperationName="getOrderPrice()" OperationDescription="An operation with name getOrderPrice() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getOrderPrice()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/orderOtherService/orderOther/security/{checkDate}/{accountId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:securityInfoCheck()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:securityInfoCheck()]</GeneratingPSM>
            <operation OperationName="securityInfoCheck()" OperationDescription="An operation with name securityInfoCheck() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:securityInfoCheck()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/orderOtherService/orderOther/status/{orderId}/{status}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyOrder()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:modifyOrder()]</GeneratingPSM>
            <operation OperationName="modifyOrder()" OperationDescription="An operation with name modifyOrder() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyOrder()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT /api/v1/orderOtherService/orderOther/admin">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateOrder()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateOrder()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:updateOrder()]</GeneratingPSM>
            <operation OperationName="updateOrder()" OperationDescription="An operation with name updateOrder() that requests object Order and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateOrder()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/orderOtherService/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/orderOtherService/orderOther/{orderId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteOrder()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:deleteOrder()]</GeneratingPSM>
            <operation OperationName="deleteOrder()" OperationDescription="An operation with name deleteOrder() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteOrder()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/orderOtherService/orderOther/refresh">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryOrdersForRefresh()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryOrdersForRefresh()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryOrdersForRefresh()]</GeneratingPSM>
            <operation OperationName="queryOrdersForRefresh()" OperationDescription="An operation with name queryOrdersForRefresh() that requests object QueryInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryOrdersForRefresh()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/orderOtherService/orderOther/tickets">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTicketListByDateAndTripId()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTicketListByDateAndTripId()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getTicketListByDateAndTripId()]</GeneratingPSM>
            <operation OperationName="getTicketListByDateAndTripId()" OperationDescription="An operation with name getTicketListByDateAndTripId() that requests object Seat and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTicketListByDateAndTripId()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/orderOtherService/orderOther/{travelDate}/{trainNumber}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:calculateSoldTicket()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:calculateSoldTicket()]</GeneratingPSM>
            <operation OperationName="calculateSoldTicket()" OperationDescription="An operation with name calculateSoldTicket() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:calculateSoldTicket()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT /api/v1/orderOtherService/orderOther">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:saveOrderInfo()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:saveOrderInfo()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:saveOrderInfo()]</GeneratingPSM>
            <operation OperationName="saveOrderInfo()" OperationDescription="An operation with name saveOrderInfo() that requests object Order and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:saveOrderInfo()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/orderOtherService/orderOther/admin">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addcreateNewOrder()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addcreateNewOrder()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:addcreateNewOrder()]</GeneratingPSM>
            <operation OperationName="addcreateNewOrder()" OperationDescription="An operation with name addcreateNewOrder() that requests object Order and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addcreateNewOrder()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/orderOtherService/orderOther/query">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryOrders()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryOrders()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryOrders()]</GeneratingPSM>
            <operation OperationName="queryOrders()" OperationDescription="An operation with name queryOrders() that requests object QueryInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryOrders()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/orderOtherService/orderOther">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:findAllOrder()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:findAllOrder()]</GeneratingPSM>
            <operation OperationName="findAllOrder()" OperationDescription="An operation with name findAllOrder() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:findAllOrder()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/orderOtherService/orderOther/orderPay/{orderId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:payOrder()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:payOrder()]</GeneratingPSM>
            <operation OperationName="payOrder()" OperationDescription="An operation with name payOrder() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:payOrder()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/orderOtherService/orderOther/{orderId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getOrderById()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getOrderById()]</GeneratingPSM>
            <operation OperationName="getOrderById()" OperationDescription="An operation with name getOrderById() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getOrderById()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/orderOtherService/orderOther">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createNewOrder()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createNewOrder()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:createNewOrder()]</GeneratingPSM>
            <operation OperationName="createNewOrder()" OperationDescription="An operation with name createNewOrder() that requests object Order and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createNewOrder()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-other-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-order-other-service]</GeneratingPSM>
        </interface>
        <dependencies ProviderName="ts-order-other-mongo" ProviderDestination="" Environment="COMPILE">
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="queryForStationId()" ProviderName="ts-station-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/stationservice/stations/namelist&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-other-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-order-other-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-config-service">
        <container ContainerName="ts-config-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-config-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-config-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components xsi:type="PIM:InfrastructureClientComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-config-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT api/v1/configservice/configs">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateConfig()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateConfig()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:updateConfig()]</GeneratingPSM>
            <operation OperationName="updateConfig()" OperationDescription="An operation with name updateConfig() that requests object Config and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateConfig()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST api/v1/configservice/configs">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createConfig()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createConfig()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:createConfig()]</GeneratingPSM>
            <operation OperationName="createConfig()" OperationDescription="An operation with name createConfig() that requests object Config and responds with object HttpEntity&lt;>">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createConfig()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE api/v1/configservice/configs/{configName}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteConfig()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:deleteConfig()]</GeneratingPSM>
            <operation OperationName="deleteConfig()" OperationDescription="An operation with name deleteConfig() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteConfig()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET api/v1/configservice/configs/{configName}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:retrieve()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:retrieve()]</GeneratingPSM>
            <operation OperationName="retrieve()" OperationDescription="An operation with name retrieve() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:retrieve()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET api/v1/configservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET api/v1/configservice/configs">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryAll()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryAll()]</GeneratingPSM>
            <operation OperationName="queryAll()" OperationDescription="An operation with name queryAll() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryAll()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-config-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-config-service]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-config-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-config-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-station-service">
        <container ContainerName="ts-station-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-station-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-station-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components xsi:type="PIM:InfrastructureClientComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.database]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.port]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-station-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/stationservice/stations/idlist">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryForIdBatch()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryForIdBatch()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryForIdBatch()]</GeneratingPSM>
            <operation OperationName="queryForIdBatch()" OperationDescription="An operation with name queryForIdBatch() that requests object List&lt;String> and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryForIdBatch()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/stationservice/stations/namelist">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryForNameBatch()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryForNameBatch()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryForNameBatch()]</GeneratingPSM>
            <operation OperationName="queryForNameBatch()" OperationDescription="An operation with name queryForNameBatch() that requests object List&lt;String> and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryForNameBatch()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/stationservice/stations/name/{stationIdForName}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryById()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryById()]</GeneratingPSM>
            <operation OperationName="queryById()" OperationDescription="An operation with name queryById() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryById()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/stationservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/stationservice/stations/id/{stationNameForId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryForStationId()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryForStationId()]</GeneratingPSM>
            <operation OperationName="queryForStationId()" OperationDescription="An operation with name queryForStationId() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryForStationId()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT /api/v1/stationservice/stations">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:update()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:update()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:update()]</GeneratingPSM>
            <operation OperationName="update()" OperationDescription="An operation with name update() that requests object Station and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:update()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/stationservice/stations">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:query()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:query()]</GeneratingPSM>
            <operation OperationName="query()" OperationDescription="An operation with name query() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:query()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/stationservice/stations">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:delete()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:delete()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:delete()]</GeneratingPSM>
            <operation OperationName="delete()" OperationDescription="An operation with name delete() that requests object Station and responds with object ResponseEntity&lt;Response>">
              <GeneratingPSM>JavaMethod[ElementIdentifier:delete()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/stationservice/stations">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:create()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:create()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:create()]</GeneratingPSM>
            <operation OperationName="create()" OperationDescription="An operation with name create() that requests object Station and responds with object ResponseEntity&lt;Response>">
              <GeneratingPSM>JavaMethod[ElementIdentifier:create()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-station-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-station-service]</GeneratingPSM>
        </interface>
        <dependencies ProviderName="ts-station-mongo" ProviderDestination="" Environment="COMPILE">
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-station-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-station-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-train-service">
        <container ContainerName="ts-train-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-train-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-train-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components xsi:type="PIM:InfrastructureClientComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.database]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.port]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-train-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/trainservice/trains">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:query()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:query()]</GeneratingPSM>
            <operation OperationName="query()" OperationDescription="An operation with name query() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:query()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT /api/v1/trainservice/trains">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:update()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:update()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:update()]</GeneratingPSM>
            <operation OperationName="update()" OperationDescription="An operation with name update() that requests object TrainType and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:update()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/trainservice/trains">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:create()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:create()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:create()]</GeneratingPSM>
            <operation OperationName="create()" OperationDescription="An operation with name create() that requests object TrainType and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:create()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/trainservice/trains/{id}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:retrieve()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:retrieve()]</GeneratingPSM>
            <operation OperationName="retrieve()" OperationDescription="An operation with name retrieve() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:retrieve()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/trainservice/trains/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/trainservice/trains/{id}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:delete()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:delete()]</GeneratingPSM>
            <operation OperationName="delete()" OperationDescription="An operation with name delete() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:delete()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-train-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-train-service]</GeneratingPSM>
        </interface>
        <dependencies ProviderName="ts-train-mongo" ProviderDestination="" Environment="COMPILE">
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-train-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-train-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-travel-service">
        <container ContainerName="ts-travel-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-travel-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components xsi:type="PIM:InfrastructureClientComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.database]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.port]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-travel-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/travelservice/trips/{tripId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteTrip()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:deleteTrip()]</GeneratingPSM>
            <operation OperationName="deleteTrip()" OperationDescription="An operation with name deleteTrip() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteTrip()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/travelservice/trips/{tripId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:retrieve()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:retrieve()]</GeneratingPSM>
            <operation OperationName="retrieve()" OperationDescription="An operation with name retrieve() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:retrieve()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/travelservice/trips/left">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryInfo()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryInfo()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryInfo()]</GeneratingPSM>
            <operation OperationName="queryInfo()" OperationDescription="An operation with name queryInfo() that requests object TripInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryInfo()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/travelservice/train_types/{tripId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTrainTypeByTripId()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getTrainTypeByTripId()]</GeneratingPSM>
            <operation OperationName="getTrainTypeByTripId()" OperationDescription="An operation with name getTrainTypeByTripId() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTrainTypeByTripId()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/travelservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/travelservice/routes/{tripId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getRouteByTripId()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getRouteByTripId()]</GeneratingPSM>
            <operation OperationName="getRouteByTripId()" OperationDescription="An operation with name getRouteByTripId() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getRouteByTripId()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/travelservice/trips">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createTrip()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createTrip()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:createTrip()]</GeneratingPSM>
            <operation OperationName="createTrip()" OperationDescription="An operation with name createTrip() that requests object TravelInfo and responds with object HttpEntity&lt;>">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createTrip()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT /api/v1/travelservice/trips">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateTrip()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateTrip()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:updateTrip()]</GeneratingPSM>
            <operation OperationName="updateTrip()" OperationDescription="An operation with name updateTrip() that requests object TravelInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateTrip()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/travelservice/trips">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryAll()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryAll()]</GeneratingPSM>
            <operation OperationName="queryAll()" OperationDescription="An operation with name queryAll() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryAll()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/travelservice/admin_trip">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:adminQueryAll()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:adminQueryAll()]</GeneratingPSM>
            <operation OperationName="adminQueryAll()" OperationDescription="An operation with name adminQueryAll() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:adminQueryAll()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/travelservice/trip_detail">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTripAllDetailInfo()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTripAllDetailInfo()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getTripAllDetailInfo()]</GeneratingPSM>
            <operation OperationName="getTripAllDetailInfo()" OperationDescription="An operation with name getTripAllDetailInfo() that requests object TripAllDetailInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTripAllDetailInfo()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/travelservice/trips/routes">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTripsByRouteId()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTripsByRouteId()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getTripsByRouteId()]</GeneratingPSM>
            <operation OperationName="getTripsByRouteId()" OperationDescription="An operation with name getTripsByRouteId() that requests object ArrayList&lt;String> and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTripsByRouteId()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-travel-service]</GeneratingPSM>
        </interface>
        <dependencies ProviderName="ts-travel-mongo" ProviderDestination="" Environment="COMPILE">
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="queryForStationId()" ProviderName="ts-ticketinfo-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/ticketinfoservice/ticketinfo/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getTickets()" ProviderName="ts-ticketinfo-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/ticketinfoservice/ticketinfo&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getTrainType()" ProviderName="ts-train-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/trainservice/trains/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getTickets()" ProviderName="" ProviderDestination="Endpoint[RequestURI:GET ]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getRestTicketNumber()" ProviderName="ts-seat-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/seatservice/seats/left_tickets&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getRouteByRouteId()" ProviderName="ts-route-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/routeservice/routes/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-travel-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-travel2-service">
        <container ContainerName="ts-travel2-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel2-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-travel2-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components xsi:type="PIM:InfrastructureClientComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.database]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.port]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-travel2-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/travel2service/trips/left">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryInfo()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryInfo()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryInfo()]</GeneratingPSM>
            <operation OperationName="queryInfo()" OperationDescription="An operation with name queryInfo() that requests object TripInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryInfo()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/travel2service/trips/{tripId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:retrieve()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:retrieve()]</GeneratingPSM>
            <operation OperationName="retrieve()" OperationDescription="An operation with name retrieve() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:retrieve()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/travel2service/trip_detail">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTripAllDetailInfo()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTripAllDetailInfo()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getTripAllDetailInfo()]</GeneratingPSM>
            <operation OperationName="getTripAllDetailInfo()" OperationDescription="An operation with name getTripAllDetailInfo() that requests object TripAllDetailInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTripAllDetailInfo()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/travel2service/trips">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryAll()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryAll()]</GeneratingPSM>
            <operation OperationName="queryAll()" OperationDescription="An operation with name queryAll() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryAll()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/travel2service/trips/routes">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTripsByRouteId()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTripsByRouteId()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getTripsByRouteId()]</GeneratingPSM>
            <operation OperationName="getTripsByRouteId()" OperationDescription="An operation with name getTripsByRouteId() that requests object ArrayList&lt;String> and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTripsByRouteId()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/travel2service/trips/{tripId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteTrip()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:deleteTrip()]</GeneratingPSM>
            <operation OperationName="deleteTrip()" OperationDescription="An operation with name deleteTrip() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteTrip()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT /api/v1/travel2service/trips">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateTrip()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateTrip()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:updateTrip()]</GeneratingPSM>
            <operation OperationName="updateTrip()" OperationDescription="An operation with name updateTrip() that requests object TravelInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateTrip()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/travel2service/routes/{tripId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getRouteByTripId()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getRouteByTripId()]</GeneratingPSM>
            <operation OperationName="getRouteByTripId()" OperationDescription="An operation with name getRouteByTripId() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getRouteByTripId()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/travel2service/trips">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createTrip()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createTrip()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:createTrip()]</GeneratingPSM>
            <operation OperationName="createTrip()" OperationDescription="An operation with name createTrip() that requests object TravelInfo and responds with object HttpEntity&lt;>">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createTrip()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/travel2service/train_types/{tripId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTrainTypeByTripId()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getTrainTypeByTripId()]</GeneratingPSM>
            <operation OperationName="getTrainTypeByTripId()" OperationDescription="An operation with name getTrainTypeByTripId() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTrainTypeByTripId()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/travel2service/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/travel2service/admin_trip">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:adminQueryAll()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:adminQueryAll()]</GeneratingPSM>
            <operation OperationName="adminQueryAll()" OperationDescription="An operation with name adminQueryAll() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:adminQueryAll()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel2-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-travel2-service]</GeneratingPSM>
        </interface>
        <dependencies ProviderName="ts-travel2-mongo" ProviderDestination="" Environment="COMPILE">
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="queryForStationId()" ProviderName="ts-ticketinfo-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/ticketinfoservice/ticketinfo/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getTickets()" ProviderName="ts-ticketinfo-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/ticketinfoservice/ticketinfo&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getRouteByRouteId()" ProviderName="ts-route-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/routeservice/routes/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getTrainType()" ProviderName="ts-train-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/trainservice/trains/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getTickets()" ProviderName="" ProviderDestination="Endpoint[RequestURI:GET ]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getRestTicketNumber()" ProviderName="ts-seat-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/seatservice/seats/left_tickets&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel2-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-travel2-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-preserve-service">
        <container ContainerName="ts-preserve-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-preserve-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-preserve-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <components Category="Observability_Pattern_Application_Metrics_Logging" Technology="Slf4j" Environment="COMPILE">
          <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-preserve-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/preserveservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/preserveservice/preserve">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:preserve()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:preserve()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:preserve()]</GeneratingPSM>
            <operation OperationName="preserve()" OperationDescription="An operation with name preserve() that requests object OrderTicketsInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:preserve()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-preserve-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-preserve-service]</GeneratingPSM>
        </interface>
        <dependencies ConsumerOperation="preserve()" ProviderName="ts-ticketinfo-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/ticketinfoservice/ticketinfo&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getTripAllDetailInformation()" ProviderName="ts-travel-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/travelservice/trip_detail&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="queryForStationId()" ProviderName="ts-station-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/stationservice/stations/id/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="dipatchSeat()" ProviderName="ts-seat-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/seatservice/seats&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="addAssuranceForOrder()" ProviderName="" ProviderDestination="Endpoint[RequestURI:GET ]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="createConsign()" ProviderName="ts-consign-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/consignservice/consigns&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getContactsById()" ProviderName="ts-contacts-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/contactservice/contacts/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="sendEmail()" ProviderName="ts-notification-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/notifyservice/notification/order_cancel_success&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="createFoodOrder()" ProviderName="ts-food-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/foodservice/orders&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="createOrder()" ProviderName="ts-order-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/orderservice/order&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getAccount()" ProviderName="ts-user-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/userservice/users/id/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="checkSecurity()" ProviderName="ts-security-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/securityservice/securityConfigs/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-preserve-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-preserve-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-preserve-other-service">
        <container ContainerName="ts-preserve-other-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-preserve-other-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-preserve-other-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <components Category="Observability_Pattern_Application_Metrics_Logging" Technology="Slf4j" Environment="COMPILE">
          <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-preserve-other-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/preserveotherservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/preserveotherservice/preserveOther">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:preserve()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:preserve()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:preserve()]</GeneratingPSM>
            <operation OperationName="preserve()" OperationDescription="An operation with name preserve() that requests object OrderTicketsInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:preserve()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-preserve-other-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-preserve-other-service]</GeneratingPSM>
        </interface>
        <dependencies ConsumerOperation="getContactsById()" ProviderName="ts-contacts-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/contactservice/contacts/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="createConsign()" ProviderName="ts-consign-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/consignservice/consigns&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getAccount()" ProviderName="ts-user-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/userservice/users/id/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="queryForStationId()" ProviderName="ts-station-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/stationservice/stations/id/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="checkSecurity()" ProviderName="ts-security-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/securityservice/securityConfigs/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="sendEmail()" ProviderName="ts-notification-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/notifyservice/notification/order_cancel_success&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="dipatchSeat()" ProviderName="ts-seat-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/seatservice/seats&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getTripAllDetailInformation()" ProviderName="ts-travel2-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/travel2service/trip_detail&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="preserve()" ProviderName="ts-ticketinfo-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/ticketinfoservice/ticketinfo&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="createOrder()" ProviderName="ts-order-other-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/orderOtherService/orderOther&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="createFoodOrder()" ProviderName="ts-food-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/foodservice/orders&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="addAssuranceForOrder()" ProviderName="" ProviderDestination="Endpoint[RequestURI:GET ]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-preserve-other-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-preserve-other-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-basic-service">
        <container ContainerName="ts-basic-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-basic-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-basic-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <components Category="Observability_Pattern_Application_Metrics_Logging" Technology="Slf4j" Environment="COMPILE">
          <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-basic-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/basicservice/basic/travel">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryForTravel()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryForTravel()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryForTravel()]</GeneratingPSM>
            <operation OperationName="queryForTravel()" OperationDescription="An operation with name queryForTravel() that requests object Travel and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryForTravel()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/basicservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/basicservice/basic/{stationName}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryForStationId()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryForStationId()]</GeneratingPSM>
            <operation OperationName="queryForStationId()" OperationDescription="An operation with name queryForStationId() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryForStationId()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-basic-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-basic-service]</GeneratingPSM>
        </interface>
        <dependencies ConsumerOperation="getRouteByRouteId()" ProviderName="ts-route-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/routeservice/routes/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="checkStationExists()" ProviderName="ts-station-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/stationservice/stations/id/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="queryPriceConfigByRouteIdAndTrainType()" ProviderName="" ProviderDestination="Endpoint[RequestURI:GET ]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="queryTrainType()" ProviderName="ts-train-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/trainservice/trains/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-basic-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-basic-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-ticketinfo-service">
        <container ContainerName="ts-ticketinfo-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ticketinfo-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-ticketinfo-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-ticketinfo-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/ticketinfoservice/ticketinfo">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryForTravel()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryForTravel()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryForTravel()]</GeneratingPSM>
            <operation OperationName="queryForTravel()" OperationDescription="An operation with name queryForTravel() that requests object Travel and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryForTravel()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/ticketinfoservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/ticketinfoservice/ticketinfo/{name}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryForStationId()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryForStationId()]</GeneratingPSM>
            <operation OperationName="queryForStationId()" OperationDescription="An operation with name queryForStationId() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryForStationId()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ticketinfo-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-ticketinfo-service]</GeneratingPSM>
        </interface>
        <dependencies ConsumerOperation="queryForTravel()" ProviderName="ts-basic-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/basicservice/basic/travel&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="queryForStationId()" ProviderName="ts-basic-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/basicservice/basic/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ticketinfo-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-ticketinfo-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-price-service">
        <container ContainerName="ts-price-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-price-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-price-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components xsi:type="PIM:InfrastructureClientComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.database]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.port]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-price-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT /api/v1/priceservice/prices">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:update()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:update()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:update()]</GeneratingPSM>
            <operation OperationName="update()" OperationDescription="An operation with name update() that requests object PriceConfig and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:update()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/priceservice/prices">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:delete()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:delete()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:delete()]</GeneratingPSM>
            <operation OperationName="delete()" OperationDescription="An operation with name delete() that requests object PriceConfig and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:delete()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/priceservice/prices/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/priceservice/prices">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryAll()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryAll()]</GeneratingPSM>
            <operation OperationName="queryAll()" OperationDescription="An operation with name queryAll() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryAll()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/priceservice/prices">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:create()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:create()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:create()]</GeneratingPSM>
            <operation OperationName="create()" OperationDescription="An operation with name create() that requests object PriceConfig and responds with object HttpEntity&lt;>">
              <GeneratingPSM>JavaMethod[ElementIdentifier:create()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/priceservice/prices/{routeId}/{trainType}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:query()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:query()]</GeneratingPSM>
            <operation OperationName="query()" OperationDescription="An operation with name query() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:query()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-price-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-price-service]</GeneratingPSM>
        </interface>
        <dependencies ProviderName="ts-price-mongo" ProviderDestination="" Environment="COMPILE">
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-price-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-price-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-notification-service">
        <container ContainerName="ts-notification-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-notification-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-notification-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-notification-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/notifyservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/notifyservice/notification/preserve_success">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:preserve_success()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:preserve_success()]</GeneratingPSM>
            <operation OperationName="preserve_success()" OperationDescription="An operation with name preserve_success() that requests object NotifyInfo">
              <GeneratingPSM>JavaMethod[ElementIdentifier:preserve_success()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/notifyservice/notification/order_create_success">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:order_create_success()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:order_create_success()]</GeneratingPSM>
            <operation OperationName="order_create_success()" OperationDescription="An operation with name order_create_success() that requests object NotifyInfo">
              <GeneratingPSM>JavaMethod[ElementIdentifier:order_create_success()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/notifyservice/notification/order_changed_success">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:order_changed_success()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:order_changed_success()]</GeneratingPSM>
            <operation OperationName="order_changed_success()" OperationDescription="An operation with name order_changed_success() that requests object NotifyInfo">
              <GeneratingPSM>JavaMethod[ElementIdentifier:order_changed_success()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/notifyservice/notification/order_cancel_success">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:order_cancel_success()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:order_cancel_success()]</GeneratingPSM>
            <operation OperationName="order_cancel_success()" OperationDescription="An operation with name order_cancel_success() that requests object NotifyInfo">
              <GeneratingPSM>JavaMethod[ElementIdentifier:order_cancel_success()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-notification-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-notification-service]</GeneratingPSM>
        </interface>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-notification-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-notification-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-security-service">
        <container ContainerName="ts-security-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-security-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-security-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components xsi:type="PIM:InfrastructureClientComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.database]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.port]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-security-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT /api/v1/securityservice/securityConfigs">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:update()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:update()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:update()]</GeneratingPSM>
            <operation OperationName="update()" OperationDescription="An operation with name update() that requests object SecurityConfig and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:update()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/securityservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/securityservice/securityConfigs">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:create()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:create()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:create()]</GeneratingPSM>
            <operation OperationName="create()" OperationDescription="An operation with name create() that requests object SecurityConfig and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:create()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/securityservice/securityConfigs/{accountId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:check()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:check()]</GeneratingPSM>
            <operation OperationName="check()" OperationDescription="An operation with name check() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:check()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/securityservice/securityConfigs/{id}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:delete()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:delete()]</GeneratingPSM>
            <operation OperationName="delete()" OperationDescription="An operation with name delete() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:delete()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/securityservice/securityConfigs">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:findAllSecurityConfig()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:findAllSecurityConfig()]</GeneratingPSM>
            <operation OperationName="findAllSecurityConfig()" OperationDescription="An operation with name findAllSecurityConfig() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:findAllSecurityConfig()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-security-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-security-service]</GeneratingPSM>
        </interface>
        <dependencies ProviderName="ts-security-mongo" ProviderDestination="" Environment="COMPILE">
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getSecurityOrderOtherInfoFromOrder()" ProviderName="" ProviderDestination="Endpoint[RequestURI:GET ]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-security-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-security-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-inside-payment-service">
        <container ContainerName="ts-inside-payment-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-inside-payment-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-inside-payment-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components xsi:type="PIM:InfrastructureClientComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.database]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.port]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-inside-payment-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/inside_pay_service/inside_payment/{userId}/{money}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addMoney()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:addMoney()]</GeneratingPSM>
            <operation OperationName="addMoney()" OperationDescription="An operation with name addMoney() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addMoney()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/inside_pay_service/inside_payment/payment">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryPayment()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryPayment()]</GeneratingPSM>
            <operation OperationName="queryPayment()" OperationDescription="An operation with name queryPayment() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryPayment()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/inside_pay_service/inside_payment">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:pay()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:pay()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:pay()]</GeneratingPSM>
            <operation OperationName="pay()" OperationDescription="An operation with name pay() that requests object PaymentInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:pay()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/inside_pay_service/inside_payment/money">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryAddMoney()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryAddMoney()]</GeneratingPSM>
            <operation OperationName="queryAddMoney()" OperationDescription="An operation with name queryAddMoney() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryAddMoney()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/inside_pay_service/inside_payment/drawback/{userId}/{money}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:drawBack()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:drawBack()]</GeneratingPSM>
            <operation OperationName="drawBack()" OperationDescription="An operation with name drawBack() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:drawBack()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/inside_pay_service/inside_payment/difference">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:payDifference()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:payDifference()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:payDifference()]</GeneratingPSM>
            <operation OperationName="payDifference()" OperationDescription="An operation with name payDifference() that requests object PaymentInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:payDifference()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/inside_pay_service/inside_payment/account">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryAccount()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:queryAccount()]</GeneratingPSM>
            <operation OperationName="queryAccount()" OperationDescription="An operation with name queryAccount() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:queryAccount()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/inside_pay_service/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/inside_pay_service/inside_payment/account">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createAccount()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createAccount()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:createAccount()]</GeneratingPSM>
            <operation OperationName="createAccount()" OperationDescription="An operation with name createAccount() that requests object AccountInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createAccount()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-inside-payment-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-inside-payment-service]</GeneratingPSM>
        </interface>
        <dependencies ProviderName="ts-inside-payment-mongo" ProviderDestination="" Environment="COMPILE">
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="pay()">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="setOrderStatus()">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="payDifference()" ProviderName="ts-payment-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/paymentservice/payment&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="setOrderStatus()">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-inside-payment-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-inside-payment-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-execute-service">
        <container ContainerName="ts-execute-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-execute-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-execute-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-execute-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/executeservice/execute/collected/{orderId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:collectTicket()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:collectTicket()]</GeneratingPSM>
            <operation OperationName="collectTicket()" OperationDescription="An operation with name collectTicket() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:collectTicket()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/executeservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/executeservice/execute/execute/{orderId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:executeTicket()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:executeTicket()]</GeneratingPSM>
            <operation OperationName="executeTicket()" OperationDescription="An operation with name executeTicket() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:executeTicket()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-execute-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-execute-service]</GeneratingPSM>
        </interface>
        <dependencies ConsumerOperation="executeOrderOther()" ProviderName="" ProviderDestination="Endpoint[RequestURI:GET ]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getOrderByIdFromOrder()" ProviderName="ts-order-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/orderservice/order/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getOrderByIdFromOrderOther()" ProviderName="ts-order-other-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/orderOtherService/orderOther/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-execute-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-execute-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-payment-service">
        <container ContainerName="ts-payment-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-payment-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-payment-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components xsi:type="PIM:InfrastructureClientComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.database]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.port]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-payment-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/paymentservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/paymentservice/payment">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:query()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:query()]</GeneratingPSM>
            <operation OperationName="query()" OperationDescription="An operation with name query() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:query()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/paymentservice/payment/money">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addMoney()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addMoney()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:addMoney()]</GeneratingPSM>
            <operation OperationName="addMoney()" OperationDescription="An operation with name addMoney() that requests object Payment and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addMoney()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/paymentservice/payment">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:pay()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:pay()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:pay()]</GeneratingPSM>
            <operation OperationName="pay()" OperationDescription="An operation with name pay() that requests object Payment and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:pay()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-payment-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-payment-service]</GeneratingPSM>
        </interface>
        <dependencies ProviderName="ts-payment-mongo" ProviderDestination="" Environment="COMPILE">
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-payment-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-payment-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-rebook-service">
        <container ContainerName="ts-rebook-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-rebook-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-rebook-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-rebook-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/rebookservice/rebook/difference">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:payDifference()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:payDifference()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:payDifference()]</GeneratingPSM>
            <operation OperationName="payDifference()" OperationDescription="An operation with name payDifference() that requests object RebookInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:payDifference()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/rebookservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/rebookservice/rebook">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:rebook()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:rebook()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:rebook()]</GeneratingPSM>
            <operation OperationName="rebook()" OperationDescription="An operation with name rebook() that requests object RebookInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:rebook()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-rebook-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-rebook-service]</GeneratingPSM>
        </interface>
        <dependencies ConsumerOperation="getTripAllDetailInformation()" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getOrderByRebookInfo()">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="createOrder()">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="queryForStationName()" ProviderName="ts-station-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/stationservice/stations/name/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="payDifferentMoney()" ProviderName="ts-inside-payment-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/inside_pay_service/inside_payment/difference&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="drawBackMoney()" ProviderName="" ProviderDestination="Endpoint[RequestURI:GET ]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="updateOrder()">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="deleteOrder()">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="dipatchSeat()" ProviderName="ts-seat-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/seatservice/seats&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-rebook-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-rebook-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-cancel-service">
        <container ContainerName="ts-cancel-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-cancel-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-cancel-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-cancel-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/cancelservice/cancel/{orderId}/{loginId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:cancelTicket()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:cancelTicket()]</GeneratingPSM>
            <operation OperationName="cancelTicket()" OperationDescription="An operation with name cancelTicket() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:cancelTicket()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/cancelservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/cancelservice/cancel/refound/{orderId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:calculate()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:calculate()]</GeneratingPSM>
            <operation OperationName="calculate()" OperationDescription="An operation with name calculate() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:calculate()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-cancel-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-cancel-service]</GeneratingPSM>
        </interface>
        <dependencies ConsumerOperation="getAccount()" ProviderName="ts-user-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/userservice/users/id/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="cancelFromOrder()" ProviderName="ts-order-service" ProviderDestination="Endpoint[RequestURI:PUT /api/v1/orderservice/order&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="drawbackMoney()" ProviderName="" ProviderDestination="Endpoint[RequestURI:GET ]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="sendEmail()" ProviderName="ts-notification-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/notifyservice/notification/order_cancel_success&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getOrderByIdFromOrder()" ProviderName="ts-order-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/orderservice/order/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="cancelFromOtherOrder()" ProviderName="ts-order-other-service" ProviderDestination="Endpoint[RequestURI:PUT /api/v1/orderOtherService/orderOther&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getOrderByIdFromOrderOther()" ProviderName="ts-order-other-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/orderOtherService/orderOther/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-cancel-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-cancel-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-assurance-service">
        <container ContainerName="ts-assurance-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-assurance-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-assurance-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components xsi:type="PIM:InfrastructureClientComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.database]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.port]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-assurance-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/assuranceservice/assurances">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllAssurances()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getAllAssurances()]</GeneratingPSM>
            <operation OperationName="getAllAssurances()" OperationDescription="An operation with name getAllAssurances() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllAssurances()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/assuranceservice/assurances/assuranceid/{assuranceId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteAssurance()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:deleteAssurance()]</GeneratingPSM>
            <operation OperationName="deleteAssurance()" OperationDescription="An operation with name deleteAssurance() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteAssurance()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/assuranceservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/assuranceservice/assurance/orderid/{orderId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:findAssuranceByOrderId()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:findAssuranceByOrderId()]</GeneratingPSM>
            <operation OperationName="findAssuranceByOrderId()" OperationDescription="An operation with name findAssuranceByOrderId() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:findAssuranceByOrderId()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/assuranceservice/assurances/types">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllAssuranceType()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getAllAssuranceType()]</GeneratingPSM>
            <operation OperationName="getAllAssuranceType()" OperationDescription="An operation with name getAllAssuranceType() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllAssuranceType()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/assuranceservice/assurances/orderid/{orderId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteAssuranceByOrderId()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:deleteAssuranceByOrderId()]</GeneratingPSM>
            <operation OperationName="deleteAssuranceByOrderId()" OperationDescription="An operation with name deleteAssuranceByOrderId() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteAssuranceByOrderId()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/assuranceservice/assurances/{typeIndex}/{orderId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createNewAssurance()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:createNewAssurance()]</GeneratingPSM>
            <operation OperationName="createNewAssurance()" OperationDescription="An operation with name createNewAssurance() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createNewAssurance()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PATCH /api/v1/assuranceservice/assurances/{assuranceId}/{orderId}/{typeIndex}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyAssurance()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:modifyAssurance()]</GeneratingPSM>
            <operation OperationName="modifyAssurance()" OperationDescription="An operation with name modifyAssurance() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyAssurance()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/assuranceservice/assurances/assuranceid/{assuranceId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAssuranceById()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getAssuranceById()]</GeneratingPSM>
            <operation OperationName="getAssuranceById()" OperationDescription="An operation with name getAssuranceById() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAssuranceById()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-assurance-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-assurance-service]</GeneratingPSM>
        </interface>
        <dependencies ProviderName="ts-assurance-mongo" ProviderDestination="" Environment="COMPILE">
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-assurance-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-assurance-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-seat-service">
        <container ContainerName="ts-seat-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-seat-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-seat-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-seat-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/seatservice/seats">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:create()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:create()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:create()]</GeneratingPSM>
            <operation OperationName="create()" OperationDescription="An operation with name create() that requests object Seat and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:create()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/seatservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/seatservice/seats/left_tickets">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getLeftTicketOfInterval()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getLeftTicketOfInterval()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getLeftTicketOfInterval()]</GeneratingPSM>
            <operation OperationName="getLeftTicketOfInterval()" OperationDescription="An operation with name getLeftTicketOfInterval() that requests object Seat and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getLeftTicketOfInterval()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-seat-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-seat-service]</GeneratingPSM>
        </interface>
        <dependencies ConsumerOperation="getLeftTicketOfInterval()" ProviderName="ts-order-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/orderservice/order/tickets&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getLeftTicketOfInterval()" ProviderName="ts-travel-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/travelservice/train_types/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="distributeSeat()" ProviderName="ts-travel2-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/travel2service/routes/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getLeftTicketOfInterval()" ProviderName="ts-travel2-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/travel2service/train_types/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="distributeSeat()" ProviderName="ts-travel-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/travelservice/routes/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getDirectProportion()" ProviderName="ts-config-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/configservice/configs/DirectTicketAllocationProportion]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="distributeSeat()" ProviderName="ts-order-other-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/orderOtherService/orderOther/tickets&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-seat-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-seat-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-travel-plan-service">
        <container ContainerName="ts-travel-plan-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-plan-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-travel-plan-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-travel-plan-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST api/v1/travelplanservice/travelPlan/quickest">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getByQuickest()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getByQuickest()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getByQuickest()]</GeneratingPSM>
            <operation OperationName="getByQuickest()" OperationDescription="An operation with name getByQuickest() that requests object TripInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getByQuickest()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST api/v1/travelplanservice/travelPlan/minStation">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getByMinStation()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getByMinStation()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getByMinStation()]</GeneratingPSM>
            <operation OperationName="getByMinStation()" OperationDescription="An operation with name getByMinStation() that requests object TripInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getByMinStation()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET api/v1/travelplanservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST api/v1/travelplanservice/travelPlan/cheapest">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getByCheapest()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getByCheapest()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getByCheapest()]</GeneratingPSM>
            <operation OperationName="getByCheapest()" OperationDescription="An operation with name getByCheapest() that requests object TripInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getByCheapest()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST api/v1/travelplanservice/travelPlan/transferResult">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTransferResult()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTransferResult()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getTransferResult()]</GeneratingPSM>
            <operation OperationName="getTransferResult()" OperationDescription="An operation with name getTransferResult() that requests object TransferTravelInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTransferResult()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-plan-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-travel-plan-service]</GeneratingPSM>
        </interface>
        <dependencies ConsumerOperation="getRoutePlanResultMinStation()" ProviderName="ts-route-plan-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/routeplanservice/routePlan/minStopStations&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="tripsFromNormal()" ProviderName="ts-travel2-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/travel2service/trips/left&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getRoutePlanResultCheapest()" ProviderName="ts-route-plan-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/routeplanservice/routePlan/cheapestRoute&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getRoutePlanResultQuickest()" ProviderName="ts-route-plan-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/routeplanservice/routePlan/quickestRoute&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="queryForStationId()" ProviderName="ts-ticketinfo-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/ticketinfoservice/ticketinfo/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getRestTicketNumber()" ProviderName="ts-seat-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/seatservice/seats/left_tickets&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="tripsFromHighSpeed()" ProviderName="ts-travel-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/travelservice/trips/left&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="transferStationIdToStationName()" ProviderName="ts-station-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/stationservice/stations/namelist&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-plan-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-travel-plan-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-food-map-service">
        <container ContainerName="ts-food-map-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-map-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-food-map-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components xsi:type="PIM:InfrastructureClientComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.database]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.port]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-food-map-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/foodmapservice/trainfoods/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/foodmapservice/foodstores">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getFoodStoresByStationIds()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getFoodStoresByStationIds()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getFoodStoresByStationIds()]</GeneratingPSM>
            <operation OperationName="getFoodStoresByStationIds()" OperationDescription="An operation with name getFoodStoresByStationIds() that requests object List&lt;String> and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getFoodStoresByStationIds()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/foodmapservice/foodstores/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/foodmapservice/foodstores">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllFoodStores()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getAllFoodStores()]</GeneratingPSM>
            <operation OperationName="getAllFoodStores()" OperationDescription="An operation with name getAllFoodStores() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllFoodStores()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/foodmapservice/trainfoods">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllTrainFood()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getAllTrainFood()]</GeneratingPSM>
            <operation OperationName="getAllTrainFood()" OperationDescription="An operation with name getAllTrainFood() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllTrainFood()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/foodmapservice/foodstores/{stationId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getFoodStoresOfStation()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getFoodStoresOfStation()]</GeneratingPSM>
            <operation OperationName="getFoodStoresOfStation()" OperationDescription="An operation with name getFoodStoresOfStation() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getFoodStoresOfStation()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/foodmapservice/trainfoods/{tripId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTrainFoodOfTrip()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getTrainFoodOfTrip()]</GeneratingPSM>
            <operation OperationName="getTrainFoodOfTrip()" OperationDescription="An operation with name getTrainFoodOfTrip() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getTrainFoodOfTrip()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-map-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-food-map-service]</GeneratingPSM>
        </interface>
        <dependencies ProviderName="ts-food-map-mongo" ProviderDestination="" Environment="COMPILE">
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-map-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-food-map-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-route-plan-service">
        <container ContainerName="ts-route-plan-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-plan-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-route-plan-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-route-plan-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/routeplanservice/routePlan/cheapestRoute">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getCheapestRoutes()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getCheapestRoutes()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getCheapestRoutes()]</GeneratingPSM>
            <operation OperationName="getCheapestRoutes()" OperationDescription="An operation with name getCheapestRoutes() that requests object RoutePlanInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getCheapestRoutes()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/routeplanservice/routePlan/quickestRoute">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getQuickestRoutes()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getQuickestRoutes()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getQuickestRoutes()]</GeneratingPSM>
            <operation OperationName="getQuickestRoutes()" OperationDescription="An operation with name getQuickestRoutes() that requests object RoutePlanInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getQuickestRoutes()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/routeplanservice/routePlan/minStopStations">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getMinStopStations()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getMinStopStations()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getMinStopStations()]</GeneratingPSM>
            <operation OperationName="getMinStopStations()" OperationDescription="An operation with name getMinStopStations() that requests object RoutePlanInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getMinStopStations()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/routeplanservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-plan-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-route-plan-service]</GeneratingPSM>
        </interface>
        <dependencies ConsumerOperation="searchMinStopStations()" ProviderName="ts-travel-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/travelservice/trips/routes&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getStationList()" ProviderName="" ProviderDestination="Endpoint[RequestURI:GET ]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="searchMinStopStations()" ProviderName="ts-travel2-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/travel2service/trips/routes&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getRouteByRouteId()" ProviderName="ts-route-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/routeservice/routes/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getTripFromNormalTrainTravelService()" ProviderName="ts-travel2-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/travel2service/trips/left&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getTripFromHighSpeedTravelServive()" ProviderName="ts-travel-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/travelservice/trips/left&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="searchMinStopStations()">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="queryForStationId()" ProviderName="ts-station-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/stationservice/stations/id/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-plan-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-route-plan-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-food-service">
        <container ContainerName="ts-food-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-food-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components xsi:type="PIM:InfrastructureClientComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.database]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.port]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-food-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/foodservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT /api/v1/foodservice/orders">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateFoodOrder()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateFoodOrder()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:updateFoodOrder()]</GeneratingPSM>
            <operation OperationName="updateFoodOrder()" OperationDescription="An operation with name updateFoodOrder() that requests object FoodOrder and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateFoodOrder()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/foodservice/foods/{date}/{startStation}/{endStation}/{tripId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllFood()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getAllFood()]</GeneratingPSM>
            <operation OperationName="getAllFood()" OperationDescription="An operation with name getAllFood() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllFood()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/foodservice/orders/{orderId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:findFoodOrderByOrderId()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:findFoodOrderByOrderId()]</GeneratingPSM>
            <operation OperationName="findFoodOrderByOrderId()" OperationDescription="An operation with name findFoodOrderByOrderId() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:findFoodOrderByOrderId()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/foodservice/orders">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createFoodOrder()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createFoodOrder()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:createFoodOrder()]</GeneratingPSM>
            <operation OperationName="createFoodOrder()" OperationDescription="An operation with name createFoodOrder() that requests object FoodOrder and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:createFoodOrder()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/foodservice/orders">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:findAllFoodOrder()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:findAllFoodOrder()]</GeneratingPSM>
            <operation OperationName="findAllFoodOrder()" OperationDescription="An operation with name findAllFoodOrder() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:findAllFoodOrder()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/foodservice/orders/{orderId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteFoodOrder()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:deleteFoodOrder()]</GeneratingPSM>
            <operation OperationName="deleteFoodOrder()" OperationDescription="An operation with name deleteFoodOrder() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteFoodOrder()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-food-service]</GeneratingPSM>
        </interface>
        <dependencies ProviderName="ts-food-mongo" ProviderDestination="" Environment="COMPILE">
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getAllFood()" ProviderName="ts-food-map-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/foodmapservice/foodstores&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getAllFood()" ProviderName="ts-travel-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/travelservice/routes/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getAllFood()" ProviderName="ts-food-map-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/foodmapservice/trainfoods/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getAllFood()" ProviderName="ts-station-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/stationservice/stations/id/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-food-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-consign-service">
        <container ContainerName="ts-consign-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-consign-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components xsi:type="PIM:InfrastructureClientComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.database]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.port]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <components Category="Observability_Pattern_Application_Metrics_Logging" Technology="Slf4j" Environment="COMPILE">
          <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-consign-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/consignservice/consigns/order/{id}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:findByOrderId()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:findByOrderId()]</GeneratingPSM>
            <operation OperationName="findByOrderId()" OperationDescription="An operation with name findByOrderId() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:findByOrderId()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/consignservice/consigns/{consignee}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:findByConsignee()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:findByConsignee()]</GeneratingPSM>
            <operation OperationName="findByConsignee()" OperationDescription="An operation with name findByConsignee() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:findByConsignee()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/consignservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/consignservice/consigns">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:insertConsign()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:insertConsign()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:insertConsign()]</GeneratingPSM>
            <operation OperationName="insertConsign()" OperationDescription="An operation with name insertConsign() that requests object Consign and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:insertConsign()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT /api/v1/consignservice/consigns">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateConsign()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateConsign()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:updateConsign()]</GeneratingPSM>
            <operation OperationName="updateConsign()" OperationDescription="An operation with name updateConsign() that requests object Consign and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateConsign()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/consignservice/consigns/account/{id}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:findByAccountId()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:findByAccountId()]</GeneratingPSM>
            <operation OperationName="findByAccountId()" OperationDescription="An operation with name findByAccountId() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:findByAccountId()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-consign-service]</GeneratingPSM>
        </interface>
        <dependencies ProviderName="ts-consign-mongo" ProviderDestination="" Environment="COMPILE">
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="insertConsignRecord()" ProviderName="" ProviderDestination="Endpoint[RequestURI:GET ]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-consign-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-consign-price-service">
        <container ContainerName="ts-consign-price-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-price-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-consign-price-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components xsi:type="PIM:InfrastructureClientComponent" Category="Development_Pattern_Data_Persistence" Technology="MongoDB" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-data-mongodb]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.database]</GeneratingPSM>
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.port]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-consign-price-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/consignpriceservice/consignprice/{weight}/{isWithinRegion}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getPriceByWeightAndRegion()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getPriceByWeightAndRegion()]</GeneratingPSM>
            <operation OperationName="getPriceByWeightAndRegion()" OperationDescription="An operation with name getPriceByWeightAndRegion() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getPriceByWeightAndRegion()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/consignpriceservice/consignprice">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyPriceConfig()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyPriceConfig()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:modifyPriceConfig()]</GeneratingPSM>
            <operation OperationName="modifyPriceConfig()" OperationDescription="An operation with name modifyPriceConfig() that requests object ConsignPrice and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyPriceConfig()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/consignpriceservice/consignprice/config">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getPriceConfig()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getPriceConfig()]</GeneratingPSM>
            <operation OperationName="getPriceConfig()" OperationDescription="An operation with name getPriceConfig() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getPriceConfig()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/consignpriceservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/consignpriceservice/consignprice/price">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getPriceInfo()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getPriceInfo()]</GeneratingPSM>
            <operation OperationName="getPriceInfo()" OperationDescription="An operation with name getPriceInfo() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getPriceInfo()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-price-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-consign-price-service]</GeneratingPSM>
        </interface>
        <dependencies ProviderName="ts-consign-price-mongo" ProviderDestination="" Environment="COMPILE">
          <GeneratingPSM>ConfigurationProperty[FullyQualifiedPropertyName:spring.data.mongodb.host]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-price-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-consign-price-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-admin-basic-info-service">
        <container ContainerName="ts-admin-basic-info-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-basic-info-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-basic-info-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <components Category="Observability_Pattern_Application_Metrics_Logging" Technology="Slf4j" Environment="COMPILE">
          <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-admin-basic-info-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/adminbasicservice/adminbasic/prices">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllPrices()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getAllPrices()]</GeneratingPSM>
            <operation OperationName="getAllPrices()" OperationDescription="An operation with name getAllPrices() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllPrices()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/adminbasicservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/adminbasicservice/adminbasic/stations">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteStation()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteStation()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:deleteStation()]</GeneratingPSM>
            <operation OperationName="deleteStation()" OperationDescription="An operation with name deleteStation() that requests object Station and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteStation()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/adminbasicservice/adminbasic/contacts/{contactsId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteContacts()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:deleteContacts()]</GeneratingPSM>
            <operation OperationName="deleteContacts()" OperationDescription="An operation with name deleteContacts() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteContacts()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/adminbasicservice/adminbasic/contacts">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addContacts()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addContacts()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:addContacts()]</GeneratingPSM>
            <operation OperationName="addContacts()" OperationDescription="An operation with name addContacts() that requests object Contacts and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addContacts()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/adminbasicservice/adminbasic/configs">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addConfig()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addConfig()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:addConfig()]</GeneratingPSM>
            <operation OperationName="addConfig()" OperationDescription="An operation with name addConfig() that requests object Config and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addConfig()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/adminbasicservice/adminbasic/configs/{name}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteConfig()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:deleteConfig()]</GeneratingPSM>
            <operation OperationName="deleteConfig()" OperationDescription="An operation with name deleteConfig() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteConfig()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/adminbasicservice/adminbasic/prices">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deletePrice()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deletePrice()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:deletePrice()]</GeneratingPSM>
            <operation OperationName="deletePrice()" OperationDescription="An operation with name deletePrice() that requests object PriceInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deletePrice()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/adminbasicservice/adminbasic/contacts">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllContacts()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getAllContacts()]</GeneratingPSM>
            <operation OperationName="getAllContacts()" OperationDescription="An operation with name getAllContacts() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllContacts()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/adminbasicservice/adminbasic/stations">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addStation()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addStation()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:addStation()]</GeneratingPSM>
            <operation OperationName="addStation()" OperationDescription="An operation with name addStation() that requests object Station and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addStation()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/adminbasicservice/adminbasic/prices">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addPrice()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addPrice()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:addPrice()]</GeneratingPSM>
            <operation OperationName="addPrice()" OperationDescription="An operation with name addPrice() that requests object PriceInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addPrice()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/adminbasicservice/adminbasic/stations">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllStations()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getAllStations()]</GeneratingPSM>
            <operation OperationName="getAllStations()" OperationDescription="An operation with name getAllStations() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllStations()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/adminbasicservice/adminbasic/trains/{id}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteTrain()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:deleteTrain()]</GeneratingPSM>
            <operation OperationName="deleteTrain()" OperationDescription="An operation with name deleteTrain() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteTrain()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/adminbasicservice/adminbasic/configs">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllConfigs()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getAllConfigs()]</GeneratingPSM>
            <operation OperationName="getAllConfigs()" OperationDescription="An operation with name getAllConfigs() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllConfigs()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT /api/v1/adminbasicservice/adminbasic/stations">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyStation()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyStation()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:modifyStation()]</GeneratingPSM>
            <operation OperationName="modifyStation()" OperationDescription="An operation with name modifyStation() that requests object Station and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyStation()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT /api/v1/adminbasicservice/adminbasic/prices">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyPrice()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyPrice()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:modifyPrice()]</GeneratingPSM>
            <operation OperationName="modifyPrice()" OperationDescription="An operation with name modifyPrice() that requests object PriceInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyPrice()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/adminbasicservice/adminbasic/trains">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addTrain()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addTrain()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:addTrain()]</GeneratingPSM>
            <operation OperationName="addTrain()" OperationDescription="An operation with name addTrain() that requests object TrainType and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addTrain()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT /api/v1/adminbasicservice/adminbasic/contacts">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyContacts()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyContacts()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:modifyContacts()]</GeneratingPSM>
            <operation OperationName="modifyContacts()" OperationDescription="An operation with name modifyContacts() that requests object Contacts and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyContacts()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT /api/v1/adminbasicservice/adminbasic/trains">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyTrain()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyTrain()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:modifyTrain()]</GeneratingPSM>
            <operation OperationName="modifyTrain()" OperationDescription="An operation with name modifyTrain() that requests object TrainType and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyTrain()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT /api/v1/adminbasicservice/adminbasic/configs">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyConfig()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyConfig()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:modifyConfig()]</GeneratingPSM>
            <operation OperationName="modifyConfig()" OperationDescription="An operation with name modifyConfig() that requests object Config and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:modifyConfig()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/adminbasicservice/adminbasic/trains">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllTrains()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getAllTrains()]</GeneratingPSM>
            <operation OperationName="getAllTrains()" OperationDescription="An operation with name getAllTrains() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllTrains()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-basic-info-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-basic-info-service]</GeneratingPSM>
        </interface>
        <dependencies ConsumerOperation="deleteStation()" ProviderName="ts-station-service" ProviderDestination="Endpoint[RequestURI:DELETE /api/v1/stationservice/stations&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="modifyConfig()" ProviderName="ts-config-service" ProviderDestination="Endpoint[RequestURI:PUT /api/v1/configservice/configs&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="addPrice()" ProviderName="ts-price-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/priceservice/prices&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getAllStations()" ProviderName="ts-station-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/stationservice/stations&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getAllPrices()" ProviderName="ts-price-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/priceservice/prices&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="modifyPrice()" ProviderName="ts-price-service" ProviderDestination="Endpoint[RequestURI:PUT /api/v1/priceservice/prices&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="modifyContact()" ProviderName="ts-contacts-service" ProviderDestination="Endpoint[RequestURI:PUT /api/v1/contactservice/contacts&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getAllTrains()" ProviderName="ts-train-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/trainservice/trains&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="deleteContact()" ProviderName="ts-contacts-service" ProviderDestination="Endpoint[RequestURI:DELETE /api/v1/contactservice/contacts/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="deleteTrain()" ProviderName="ts-train-service" ProviderDestination="Endpoint[RequestURI:DELETE /api/v1/trainservice/trains/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="addContact()" ProviderName="ts-contacts-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/contactservice/contacts/admin&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="addTrain()" ProviderName="ts-train-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/trainservice/trains&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="deletePrice()" ProviderName="ts-price-service" ProviderDestination="Endpoint[RequestURI:DELETE /api/v1/priceservice/prices&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getAllConfigs()" ProviderName="ts-config-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/configservice/configs&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="modifyStation()" ProviderName="ts-station-service" ProviderDestination="Endpoint[RequestURI:PUT /api/v1/stationservice/stations&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="modifyTrain()" ProviderName="ts-train-service" ProviderDestination="Endpoint[RequestURI:PUT /api/v1/trainservice/trains&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="deleteConfig()" ProviderName="ts-config-service" ProviderDestination="Endpoint[RequestURI:DELETE /api/v1/configservice/configs/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="addConfig()" ProviderName="ts-config-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/configservice/configs&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getAllContacts()" ProviderName="ts-contacts-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/contactservice/contacts&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="addStation()" ProviderName="ts-station-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/stationservice/stations&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-basic-info-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-basic-info-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-admin-order-service">
        <container ContainerName="ts-admin-order-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-order-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-order-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <components Category="Observability_Pattern_Application_Metrics_Logging" Technology="Slf4j" Environment="COMPILE">
          <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-admin-order-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/adminorderservice/adminorder/{orderId}/{trainNumber}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteOrder()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:deleteOrder()]</GeneratingPSM>
            <operation OperationName="deleteOrder()" OperationDescription="An operation with name deleteOrder() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteOrder()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/adminorderservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT /api/v1/adminorderservice/adminorder">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateOrder()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateOrder()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:updateOrder()]</GeneratingPSM>
            <operation OperationName="updateOrder()" OperationDescription="An operation with name updateOrder() that requests object Order and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateOrder()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/adminorderservice/adminorder">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllOrders()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getAllOrders()]</GeneratingPSM>
            <operation OperationName="getAllOrders()" OperationDescription="An operation with name getAllOrders() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllOrders()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/adminorderservice/adminorder">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addOrder()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addOrder()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:addOrder()]</GeneratingPSM>
            <operation OperationName="addOrder()" OperationDescription="An operation with name addOrder() that requests object Order and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addOrder()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-order-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-order-service]</GeneratingPSM>
        </interface>
        <dependencies ConsumerOperation="addOrder()" ProviderName="ts-order-other-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/orderOtherService/orderOther/admin&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getAllOrders()" ProviderName="ts-order-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/orderservice/order&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="addOrder()" ProviderName="ts-order-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/orderservice/order/admin&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="updateOrder()" ProviderName="ts-order-service" ProviderDestination="Endpoint[RequestURI:PUT /api/v1/orderservice/order/admin&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getAllOrders()" ProviderName="ts-order-other-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/orderOtherService/orderOther&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="deleteOrder()" ProviderName="ts-order-service" ProviderDestination="Endpoint[RequestURI:DELETE /api/v1/orderservice/order/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="updateOrder()" ProviderName="ts-order-other-service" ProviderDestination="Endpoint[RequestURI:PUT /api/v1/orderOtherService/orderOther/admin&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="deleteOrder()" ProviderName="ts-order-other-service" ProviderDestination="Endpoint[RequestURI:DELETE /api/v1/orderOtherService/orderOther/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-order-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-order-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-admin-route-service">
        <container ContainerName="ts-admin-route-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-route-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-route-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <components Category="Observability_Pattern_Application_Metrics_Logging" Technology="Slf4j" Environment="COMPILE">
          <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-admin-route-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/adminrouteservice/adminroute">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllRoutes()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getAllRoutes()]</GeneratingPSM>
            <operation OperationName="getAllRoutes()" OperationDescription="An operation with name getAllRoutes() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllRoutes()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/adminrouteservice/adminroute/{routeId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteRoute()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:deleteRoute()]</GeneratingPSM>
            <operation OperationName="deleteRoute()" OperationDescription="An operation with name deleteRoute() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteRoute()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/adminrouteservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/adminrouteservice/adminroute">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addRoute()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addRoute()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:addRoute()]</GeneratingPSM>
            <operation OperationName="addRoute()" OperationDescription="An operation with name addRoute() that requests object RouteInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addRoute()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-route-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-route-service]</GeneratingPSM>
        </interface>
        <dependencies ConsumerOperation="createAndModifyRoute()" ProviderName="ts-route-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/routeservice/routes&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="deleteRoute()" ProviderName="ts-route-service" ProviderDestination="Endpoint[RequestURI:DELETE /api/v1/routeservice/routes/]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getAllRoutes()" ProviderName="ts-route-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/routeservice/routes&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-route-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-route-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-admin-travel-service">
        <container ContainerName="ts-admin-travel-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-travel-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-travel-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-admin-travel-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/admintravelservice/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT /api/v1/admintravelservice/admintravel">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateTravel()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateTravel()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:updateTravel()]</GeneratingPSM>
            <operation OperationName="updateTravel()" OperationDescription="An operation with name updateTravel() that requests object TravelInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateTravel()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/admintravelservice/admintravel">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllTravels()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getAllTravels()]</GeneratingPSM>
            <operation OperationName="getAllTravels()" OperationDescription="An operation with name getAllTravels() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllTravels()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/admintravelservice/admintravel/{tripId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteTravel()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:deleteTravel()]</GeneratingPSM>
            <operation OperationName="deleteTravel()" OperationDescription="An operation with name deleteTravel() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteTravel()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/admintravelservice/admintravel">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addTravel()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addTravel()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:addTravel()]</GeneratingPSM>
            <operation OperationName="addTravel()" OperationDescription="An operation with name addTravel() that requests object TravelInfo and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addTravel()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-travel-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-travel-service]</GeneratingPSM>
        </interface>
        <dependencies ConsumerOperation="getAllTravels()" ProviderName="ts-travel-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/travelservice/admin_trip&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="deleteTravel()">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getAllTravels()" ProviderName="ts-travel2-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/travel2service/admin_trip&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="updateTravel()">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="addTravel()" ProviderName="" ProviderDestination="Endpoint[RequestURI:POST ]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-travel-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-travel-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ts-admin-user-service">
        <container ContainerName="ts-admin-user-service">
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-user-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-user-service]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <components Category="Security_Pattern_Web_Security" Technology="Spring Security" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-security]</GeneratingPSM>
          <GeneratingPSM>JavaAnnotation[AnnotationName:EnableWebSecurity]</GeneratingPSM>
        </components>
        <components Category="Observability_Pattern_Application_Metrics_Logging" Technology="Slf4j" Environment="COMPILE">
          <GeneratingPSM>JavaAnnotation[AnnotationName:Slf4j]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ts-admin-user-service:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /api/v1/adminuserservice/users">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addUser()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addUser()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:addUser()]</GeneratingPSM>
            <operation OperationName="addUser()" OperationDescription="An operation with name addUser() that requests object UserDto and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:addUser()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/adminuserservice/users/welcome">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            <operation OperationName="home()" OperationDescription="An operation with name home() that responds with object String">
              <GeneratingPSM>JavaMethod[ElementIdentifier:home()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /api/v1/adminuserservice/users">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllUsers()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:getAllUsers()]</GeneratingPSM>
            <operation OperationName="getAllUsers()" OperationDescription="An operation with name getAllUsers() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:getAllUsers()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="PUT /api/v1/adminuserservice/users">
            <messages MessageType="REQUEST" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateUser()]</GeneratingPSM>
            </messages>
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateUser()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:updateUser()]</GeneratingPSM>
            <operation OperationName="updateUser()" OperationDescription="An operation with name updateUser() that requests object UserDto and responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:updateUser()]</GeneratingPSM>
            </operation>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="DELETE /api/v1/adminuserservice/users/{userId}">
            <messages MessageType="RESPONSE" BodySchema="" SchemaFormat="JSON">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteUser()]</GeneratingPSM>
            </messages>
            <GeneratingPSM>JavaMethod[ElementIdentifier:deleteUser()]</GeneratingPSM>
            <operation OperationName="deleteUser()" OperationDescription="An operation with name deleteUser() that responds with object HttpEntity">
              <GeneratingPSM>JavaMethod[ElementIdentifier:deleteUser()]</GeneratingPSM>
            </operation>
          </destinations>
          <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-user-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-user-service]</GeneratingPSM>
        </interface>
        <dependencies ConsumerOperation="updateUser()" ProviderName="ts-user-service" ProviderDestination="Endpoint[RequestURI:PUT /api/v1/userservice/users&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="deleteUser()" ProviderName="" ProviderDestination="Endpoint[RequestURI:DELETE ]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="getAllUsers()" ProviderName="ts-user-service" ProviderDestination="Endpoint[RequestURI:GET /api/v1/userservice/users&quot;]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <dependencies ConsumerOperation="addUser()" ProviderName="ts-user-service" ProviderDestination="Endpoint[RequestURI:POST /api/v1/userservice/users/register]" Environment="COMPILE">
          <GeneratingPSM>JavaMethod[ElementIdentifier:exchange()]</GeneratingPSM>
        </dependencies>
        <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-user-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-user-service]</GeneratingPSM>
      </microservices>
      <microservices xsi:type="PIM:FunctionalMicroservice" MicroserviceName="ms-monitoring-core">
        <container ContainerName="ms-monitoring-core">
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ms-monitoring-core]</GeneratingPSM>
        </container>
        <components Category="Observability_Pattern_Application_Metrics_Generation" Technology="Actuator" Environment="COMPILE">
          <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
        </components>
        <interface ServerURL="[http|https]://ms-monitoring-core:&lt;port-number>">
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/env">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/logfile">
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/health">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;status&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;details&quot;:{&quot;type&quot;:&quot;object&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/info">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;git&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;branch&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;commit&quot;:{&quot;type&quot;:&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;id&quot;:{&quot;type&quot;:&quot;string&quot;}}}}},&quot;build&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;artifact&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;group&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;name&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;version&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;time&quot;:{&quot;type&quot;:&quot;object&quot;}}}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="GET /actuator/metrics">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;Datacenter&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Node&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;wan&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;NodeMeta&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;somekey&quot;:{&quot;type&quot;:&quot;string&quot;}}},&quot;Service&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;ID&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Service&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;Tags&quot;:{&quot;type&quot;:&quot;array&quot;,&quot;items&quot;:{&quot;type&quot;:&quot;string&quot;}},&quot;Address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;TaggedAddresses&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;lan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;wan&quot;:{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;address&quot;:{&quot;type&quot;:&quot;string&quot;},&quot;port&quot;:{&quot;type&quot;:&quot;integer&quot;}}}}},&quot;Meta&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;Port&quot;:{&quot;type&quot;:&quot;integer&quot;}}},&quot;Check&quot;:{&quot;type&quot;:&quot;object&quot;},&quot;SkipNodeUpdate&quot;:{&quot;type&quot;:&quot;boolean&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <destinations xsi:type="PIM:Endpoint" Environment="COMPILE" RequestURI="POST /actuator/shutdown">
            <messages MessageType="RESPONSE" BodySchema="{&quot;type&quot;:&quot;object&quot;,&quot;properties&quot;:{&quot;message&quot;:{&quot;type&quot;:&quot;string&quot;}}}" SchemaFormat="JSON">
              <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
            </messages>
            <GeneratingPSM>DependencyLibrary[LibraryName:spring-boot-starter-actuator]</GeneratingPSM>
          </destinations>
          <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ms-monitoring-core]</GeneratingPSM>
        </interface>
        <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ms-monitoring-core]</GeneratingPSM>
      </microservices>
      <GeneratingPSM>DistributedApplicationProject[ApplicationName:TrainTicket]</GeneratingPSM>
      <GeneratingPSM>ApplicationProject[ProjectArtifactId:ts-service]</GeneratingPSM>
    </architecture>
  </PIM:RootPIM>
  <PIM:Microservice MicroserviceName="ts-auth-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-auth-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-auth-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-user-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-user-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-user-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-verification-code-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-verification-code-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-verification-code-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-route-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-route-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-contacts-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-contacts-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-contacts-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-order-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-order-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-order-other-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-order-other-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-order-other-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-config-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-config-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-config-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-station-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-station-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-station-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-train-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-train-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-train-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-travel-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-travel-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-travel2-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel2-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-travel2-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-preserve-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-preserve-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-preserve-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-preserve-other-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-preserve-other-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-preserve-other-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-basic-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-basic-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-basic-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-ticketinfo-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-ticketinfo-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-ticketinfo-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-price-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-price-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-price-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-notification-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-notification-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-notification-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-security-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-security-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-security-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-inside-payment-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-inside-payment-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-inside-payment-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-execute-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-execute-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-execute-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-payment-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-payment-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-payment-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-rebook-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-rebook-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-rebook-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-cancel-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-cancel-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-cancel-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-assurance-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-assurance-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-assurance-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-seat-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-seat-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-seat-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-travel-plan-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-travel-plan-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-travel-plan-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-food-map-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-map-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-food-map-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-route-plan-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-route-plan-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-route-plan-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-food-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-food-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-food-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-consign-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-consign-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-consign-price-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-consign-price-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-consign-price-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-admin-basic-info-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-basic-info-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-basic-info-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-admin-order-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-order-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-order-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-admin-route-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-route-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-route-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-admin-travel-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-travel-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-travel-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ts-admin-user-service">
    <GeneratingPSM>DockerContainerDefinition[ContainerName:ts-admin-user-service,ImageField:java:8-jre, GeneratesLogs:false]</GeneratingPSM>
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ts-admin-user-service]</GeneratingPSM>
  </PIM:Microservice>
  <PIM:Microservice MicroserviceName="ms-monitoring-core">
    <GeneratingPSM>MicroserviceProject[ProjectArtifactId:ms-monitoring-core]</GeneratingPSM>
  </PIM:Microservice>
</xmi:XMI>
